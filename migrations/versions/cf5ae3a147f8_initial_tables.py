"""Initial tables

Revision ID: cf5ae3a147f8
Revises: 
Create Date: 2025-08-31 18:10:50.310961

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cf5ae3a147f8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('modules',
    sa.Column('module_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('module_code', sa.String(length=20), nullable=False),
    sa.Column('module_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('module_id'),
    sa.UniqueConstraint('module_code')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('student_number', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('admin', 'lecturer', 'student', name='role'), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('student_number'),
    sa.UniqueConstraint('username')
    )
    op.create_table('assignments',
    sa.Column('assignment_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lecturer_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('assigned_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['lecturer_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.PrimaryKeyConstraint('assignment_id')
    )
    op.create_table('classes',
    sa.Column('class_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('lecturer_id', sa.Integer(), nullable=False),
    sa.Column('class_type', sa.Enum('lecture', 'tutorial', 'practical', name='classtype'), nullable=False),
    sa.Column('class_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['lecturer_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.PrimaryKeyConstraint('class_id')
    )
    op.create_table('enrollments',
    sa.Column('enrollment_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('enrollment_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('enrollment_id')
    )
    op.create_table('facial_data',
    sa.Column('facial_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('image_path', sa.String(length=255), nullable=False),
    sa.Column('uploaded_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('facial_id')
    )
    op.create_table('attendance',
    sa.Column('attendance_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('attendance_status', sa.Enum('present', 'absent', name='attendancestatus'), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.class_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('attendance_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('attendance')
    op.drop_table('facial_data')
    op.drop_table('enrollments')
    op.drop_table('classes')
    op.drop_table('assignments')
    op.drop_table('users')
    op.drop_table('modules')
    # ### end Alembic commands ###
